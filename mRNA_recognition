import matplotlib.pyplot as plt

# creat a dictionary of nucleotide
codon_table = {
    'ATA': 'I', 'ATC': 'I', 'ATT': 'I', 'ATG': 'M',
    'ACA': 'T', 'ACC': 'T', 'ACG': 'T', 'ACT': 'T',
    'AAC': 'N', 'AAT': 'N', 'AAA': 'K', 'AAG': 'K',
    'AGC': 'S', 'AGT': 'S', 'AGA': 'R', 'AGG': 'R',
    'CTA': 'L', 'CTC': 'L', 'CTG': 'L', 'CTT': 'L',
    'CCA': 'P', 'CCC': 'P', 'CCG': 'P', 'CCT': 'P',
    'CAC': 'H', 'CAT': 'H', 'CAA': 'Q', 'CAG': 'Q',
    'CGA': 'R', 'CGC': 'R', 'CGG': 'R', 'CGT': 'R',
    'GTA': 'V', 'GTC': 'V', 'GTG': 'V', 'GTT': 'V',
    'GCA': 'A', 'GCC': 'A', 'GCG': 'A', 'GCT': 'A',
    'GAC': 'D', 'GAT': 'D', 'GAA': 'E', 'GAG': 'E',
    'GGA': 'G', 'GGC': 'G', 'GGG': 'G', 'GGT': 'G',
    'TCA': 'S', 'TCC': 'S', 'TCG': 'S', 'TCT': 'S',
    'TTC': 'F', 'TTT': 'F', 'TTA': 'L', 'TTG': 'L',
    'TAC': 'Y', 'TAT': 'Y', 'TAA': '*', 'TAG': '*',
    'TGC': 'C', 'TGT': 'C', 'TGA': '*', 'TGG': 'W'
}

# ending nuceotide
stop_codons = ['TAA', 'TAG', 'TGA']

# mission 1: find the most frequent nucleotide
def find_most_frequent_codon(mRNA):
    codon_count = {}
    start_index = mRNA.find('ATG')
    if start_index == -1:
        return None
    for i in range(start_index, len(mRNA) - 2, 3):
        codon = mRNA[i:i + 3]
        if codon in stop_codons:
            break
        if codon in codon_count:
            codon_count[codon] += 1
        else:
            codon_count[codon] = 1
    if not codon_count:
        return None
    return max(codon_count, key=codon_count.get)

# mission 2: interprete the most frequent nuleotide
def find_most_frequent_amino_acid(mrna):
    most_frequent_codon = find_most_frequent_codon(mrna)
    if most_frequent_codon is None:
        return None
    return codon_table[most_frequent_codon]

# mission 3: draw the figure of the most frequent nucleotide
def plot_amino_acid_frequency(mrna):
    amino_acid_count = {}
    start_index = mrna.find('ATG')
    if start_index == -1:
        return
    for i in range(start_index, len(mrna) - 2, 3):
        codon = mrna[i:i + 3]
        if codon in stop_codons:
            break
        amino_acid = codon_table[codon]
        if amino_acid in amino_acid_count:
            amino_acid_count[amino_acid] += 1
        else:
            amino_acid_count[amino_acid] = 1
    if not amino_acid_count:
        return
    plt.bar(amino_acid_count.keys(), amino_acid_count.values())
    plt.xlabel('氨基酸')
    plt.ylabel('频率')
    plt.title('氨基酸频率分布')
    plt.show()

# mission 4: calculate the GC concentration in the mRNA
def calculate_gc_content(mrna):
    gc_count = mrna.count('G') + mrna.count('C')
    total_count = len(mrna)
    if total_count == 0:
        return 0
    return (gc_count / total_count) * 100


if __name__ == "__main__":
    mrna_sequence = "ATGCCCATGCCCATGCCCTAA"
    print("最频繁的核苷酸三联体:", find_most_frequent_codon(mrna_sequence))
    print("最频繁氨基酸:", find_most_frequent_amino_acid(mrna_sequence))
    plot_amino_acid_frequency(mrna_sequence)
    print("GC含量 (%):", calculate_gc_content(mrna_sequence))